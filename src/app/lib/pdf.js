import { PDFDocument, rgb, StandardFonts } from 'pdf-lib';

export async function generateClientPDF(clientData) {
  const pdfDoc = await PDFDocument.create();
  let page = pdfDoc.addPage([595, 842]); // A4
  const { width, height } = page.getSize();

  // --- Colors ---
  const primaryBlue = rgb(11/255, 91/255, 211/255);
  const white = rgb(1, 1, 1);
  const black = rgb(0, 0, 0);

  const font = await pdfDoc.embedFont(StandardFonts.Helvetica);

  let y = height - 80;

  // ---- HEADER ----
  page.drawRectangle({
    x: 0, y: height - 100, width, height: 100, color: primaryBlue
  });

  page.drawText("Bonn Medical Industries", {
    x: 200, y: height - 65, size: 22, font, color: white
  });

  y -= 50;

  // ---- Intro ----
  page.drawText("Introduction", { x: 50, y, size: 16, font, color: primaryBlue });
  y -= 24;

  const introText = [
    "This report has been generated by Bonn Medical Industries based on the submission",
    "received from the client through our official website form. It provides a detailed",
    "overview of the client's request, specifications, and other relevant information.",
    "All information in this report is confidential and intended solely for internal use",
    "and planning purposes within Bonn Medical Industries."
  ];

  introText.forEach(line => {
    page.drawText(line, { x: 50, y, size: 12, font, color: black });
    y -= 16;
  });

  y -= 20;

  // ---- Rules ----
  page.drawText("Rules & Guidelines", { x: 50, y, size: 16, font, color: primaryBlue });
  y -= 24;

  const rules = [
    '1. All client requests are subject to verification by Bonn Medical Industries.',
    '2. Delivery dates and budgets are tentative and may vary based on production schedules.',
    '3. Custom formulations and packaging require internal approval before confirmation.',
    '4. Confidentiality of client data must be maintained at all times.',
    '5. This report should not be shared outside authorized personnel.'
  ];

  rules.forEach(line => {
    if (y < 50) { page = pdfDoc.addPage([595, 842]); y = height - 50; }
    page.drawText(line, { x: 60, y, size: 12, font, color: black });
    y -= 18;
  });

  y -= 25;

  // ---- Client Data ----
  page.drawText("Client Information", { x: 50, y, size: 16, font, color: primaryBlue });
  y -= 24;

  const clientFields = [
    ["Contact Person", clientData["Contact Person"]],
    ["Company Name", clientData["Name"]],
    ["Email", clientData["Email"]],
    ["Phone Number", clientData["Phone Number"]],
    ["Location", `${clientData["Postal Code"]}, ${clientData["Country"]}`],
    ["Trade License", clientData["Trade License"]],
    ["Year Established", clientData["Year Established"]],
    ["Company Owners", clientData["Company Owners"]],
    ["Business Type", clientData["Business Type"]],
    ["Presence", clientData["Presence"]],
    ["Turn Over", clientData["Turn Over"]],
    ["Team Size", clientData["Team Size"]],
    ["Partner Brands", clientData["Partner Brands"]],
    ["References", clientData["References"]],
    ["Competitors", clientData["Competitors"]],
    ["Requested Products", clientData["Requested Products"]],
    ["Target Profile", clientData["Target Profile"]],
    ["Product Category", clientData["Product Category"]],
    ["Launching Date", clientData["Launching Date"]],
    ["Custom Formulation", clientData["Custom Formulation"]],
    ["Formulation Details", clientData["Formulation Details"]],
    ["Sample Qty", clientData["Sample Qty"]],
    ["Sample Deadline", clientData["Sample Deadline"]],
    ["Testing Requirements", clientData["Testing Requirements"]],
    ["Packaging Requirements", clientData["Packaging Requirements"]],
    ["Packaging Details", clientData["Packaging Details"]],
    ["Artwork", clientData["Artwork"]],
    ["Barcode", clientData["Barcode"]],
    ["Local Language", clientData["Local Language"]],
    ["Logistics Needs", clientData["Logistics Needs"]],
    ["Incoterms", clientData["Incoterms"]],
    ["Serialization", clientData["Serialization"]],
    ["Delivery Lead Time", clientData["Delivery Lead Time"]],
    ["Authorized Distributors", clientData["Authorized Distributors"]],
    ["Storage Conditions", clientData["Storage Conditions"]],
    ["Other Notes", clientData["Other Notes"]],
    ["Signature", clientData["Signature"]],
    ["Date", clientData["Date"]],
    ["Agreed to Terms", clientData["Agree Terms"]],
  ];

  clientFields.forEach(([label, value]) => {
    if (y < 60) { page = pdfDoc.addPage([595, 842]); y = height - 50; }
    page.drawText(`${label}:`, { x: 50, y, size: 12, font, color: primaryBlue });
    page.drawText(`${value || "-"}`, { x: 200, y, size: 12, font, color: black });
    y -= 18;
  });

  // ---- Footer ----
  page.drawLine({ start: { x: 50, y: 40 }, end: { x: width - 50, y: 40 }, thickness: 1, color: primaryBlue });
  page.drawText("Â© Bonn Medical Industries - Confidential", {
    x: 50, y: 25, size: 10, font, color: black
  });

  const pdfBytes = await pdfDoc.save();
  return pdfBytes;
}
